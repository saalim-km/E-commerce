<%- include('./partials/header.ejs') %>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
    }
    .container {
      max-width: 900px;
      margin-bottom: 2%;
      padding: 20px;
      background-color: #fff;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }
    .form-group {
      margin-bottom: 15px;
    }
    .form-group label {
      font-weight: bold;
      margin-bottom: 5px;
      display: block;
    }
    .form-group input, 
    .form-group textarea, 
    .form-group select {
      width: 100%;
      padding: 10px;
      margin-top: 5px;
      border: 1px solid #ddd;
      border-radius: 5px;
    }
    .image-section {
      display: flex;
      gap: 10px;
    }
    .image-container {
      position: relative;
    }
    .image-container img {
      width: 150px;
      height: 150px;
      object-fit: cover;
      border-radius: 5px;
      box-shadow: 0 1px 5px rgba(0, 0, 0, 0.1);
    }
    .image-container button {
      position: absolute;
      top: 5px;
      right: 5px;
      background-color: #ff4444;
      color: #fff;
      border: none;
      padding: 5px 8px;
      cursor: pointer;
      border-radius: 3px;
      font-size: 12px;
    }
    .image-container button:hover {
      background-color: #ff0000;
    }
    .submit-btn {
      display: block;
      width: 100%;
      padding: 12px;
      background-color: #28a745;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 16px;
      margin-top: 20px;
    }
    .submit-btn:hover {
      background-color: #218838;
    }
    .tiny-box {
    width: 50px;
    height: 35px;
    padding: 5px;
    font-size: 14px;
    text-align: center;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
}
  </style>
</head>
<body>

<div class="container mb-5">
  <h1>Edit Product</h1>
  <form method="post" action="/admin/product/edit/<%= product._id%>" enctype="multipart/form-data" onsubmit="return validateForm()">
   <div class="mb-4">
      <label for="product_name" class="form-label">Product Name</label>
      <input type="text" placeholder="Type here" name="productName" class="form-control border" id="product_name" value="<%= product.productName %>">
      <div id="productName-error" class="error-message"></div>
   </div>
   <div class="mb-4">
      <label class="form-label">Full description</label>
      <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"><%= product.description %></textarea>
      <div id="description-error" class="error-message"></div>
   </div>
   <div class="row">
      <div class="col-lg-4">
         <div class="mb-4">
            <label class="form-label">Regular price</label>
            <input id="regularPrice" placeholder="$" name="regularPrice" type="text" class="form-control border" value="<%= product.regularPrice %>">
            <div id="regularPrice-error" class="error-message"></div>
         </div>
      </div>
      <div class="col-lg-4">
         <div class="mb-4">
            <label class="form-label">Sale price</label>
            <input id="salesPrice" placeholder="$" name="salesPrice" type="text" class="form-control border" value="<%= product.salesPrice %>">
         </div>
         <div id="salePrice-error" class="error-message"></div>
      </div>
   </div>
   <div class="card mb-4">
      <div class="card-body">
         <div class="row gx-2">
            <div class="col-sm-6 mb-3">
               <label class="form-label">Category</label>
               <select class="form-select border" style="width: 150px;" name="category">
                 <% category.forEach(cat => { %>
                     <option value="<%= cat.name %>">
                         <%= cat.name %>
                     </option>
                 <% }) %>
               </select>
               <div id="category-error" class="error-message"></div>
            </div>
         </div>
      </div>
   </div>
   <label class="mt-3" for="sizes">Sizes</label>
<div class="d-flex flex-row gap-4 align-item-center mb-4">
  <% product.sizes.forEach(size => { %>
    <div>
      <label class="mr-5" for="size_<%= size.size.toLowerCase() %>"> <%= size.size %> </label>
      <input type="text" name="<%= size.size.toLowerCase() %>" id="size_<%= size.size.toLowerCase() %>" min="0" class="tiny-box" value="<%= size.stock %>" required>
    </div>
  <% }) %>
</div>

<!-- Product Images -->
<div class="form-group">
  <h3>Product Images</h3>
  <div class="image-section" id="imageSection">
    <% product.images.forEach((image, index) => { %>
      <div class="image-container mb-2" id="image-container-<%= index %>">
        <img src="/uploads/product-images/<%= image %>" alt="Product Image" class="img-thumbnail" style="max-width: 150px; max-height: 150px;">
        <button type="button" class="btn btn-danger mt-2" onclick="removeImage('<%- image %>', <%= index %>)">Remove</button>
        <input type="hidden" name="existingImages[]" value="<%= image %>">
      </div>
    <% }) %>
  </div>
  <div>
   <button class="btn btn-md rounded font-sm hover-up" type="submit">Update</button>
   <a href="/admin/products" class="btn btn-secondary rounder font-sm hover-up">
      cancel
   </a>
   </div>
</div>
</div>
</form>
</div>


<!-- JavaScript to Handle Image Removal -->
<script>
function removeImage(imageName, index) {
   Swal.fire({
  title: "Are you sure?",
  text: "You won't be able to revert this!",
  icon: "warning",
  showCancelButton: true,
  confirmButtonColor: "#3085d6",
  cancelButtonColor: "#d33",
  confirmButtonText: "Yes, delete it!"
}).then((result) => {
  if (result.isConfirmed) {
    const productId = "<%= product._id %>";
    $.ajax({
      url: '/admin/product/remove-image',
      type: 'POST',
      data: JSON.stringify({
        productId: productId,
        imageName: imageName
      }),
      contentType: 'application/json',
      success: function (response) {
        if (response.success) {
          // Alert user and update UI to reflect image removal
         Swal.fire({
            title: "Deleted!",
            text: "image  has been deleted.",
            icon: "success"
         });     
          const imageContainer = document.getElementById(`image-container-${index}`);
          imageContainer.remove();
          
          // Dynamically add a new image input
          addNewImageInput(index);
        } else {
          alert("Error removing image: " + response.message);
        }
      },
      error: function ( error) {
        console.error("AJAX error:", error);
        alert("An error occurred while trying to remove the image.");
      }
    });
  }
});
}


// Function to dynamically add a new image input
function addNewImageInput(index) {
  const newImageInput = document.createElement('div');
  newImageInput.innerHTML = `
    <div class="card mb-2">
      <div class="card-header">
        <h4>Choose images</h4>
      </div>
      <div class="border row">
        <div id="addedImagesContainer" class="thumbnails-container"></div>
      </div>
      <div class="row">
        <div class="card-body align-items-center" style="margin-bottom: 20px;">
          <img src="" alt="" id="imgView${index + 1}">
          <input class="form-control" type="file" name="images" id="input${index + 1}" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, ${index + 1})">
          <div id="images-error" class="error-message"></div>
        </div>
      </div>
    </div>
  `;
  document.getElementById('imageSection').appendChild(newImageInput);
}
 
   // Function to handle image preview and renaming
   function viewImage(event, index) {
     let input = event.target;
     let reader = new FileReader();
 
     reader.onload = function() {
       let dataURL = reader.result;
       let image = document.getElementById("imgView" + index);
       image.src = dataURL;
 

         let timestamp = new Date().getTime();
         let fileName = `cropper-img-${timestamp}-${index}.png`;
 

         reader.onloadend = function() {
         let originalFile = input.files[0];
         let newFile = new File([originalFile], fileName, { type: originalFile.type });
 
         const fileList = new DataTransfer();
         fileList.items.add(newFile);
         input.files = fileList.files;
       };
     };
 
     reader.readAsDataURL(input.files[0]);
   }
 
   const selectedImages = [];
   document.getElementById("input1").addEventListener("change", handleFileSelect);
 
   function handleFileSelect(event) {
     const addedImagesContainer = document.getElementById("addedImagesContainer");
     addedImagesContainer.innerHTML = "";
     const files = event.target.files;
     for (let i = 0; i < files.length; i++) {
       let file = files[i];
       selectedImages.push(file);
       let thumbnail = document.createElement("div");
       thumbnail.classList.add("thumbnail");
 
       const img = document.createElement("img");
       img.src = URL.createObjectURL(file);
       img.alt = "thumbnail";
       img.style.width = "50px";
       img.style.height = "auto";
       const removeIcon = document.createElement("span");
       removeIcon.classList.add("remove-icon");
       removeIcon.innerHTML = "&times;";
       removeIcon.addEventListener("click", () => {
         const index = selectedImages.indexOf(file);
         if (index !== -1) {
           selectedImages.splice(index, 1);
         }
         thumbnail.remove();
       });
 
       thumbnail.appendChild(img);
       thumbnail.appendChild(removeIcon);
       addedImagesContainer.appendChild(thumbnail);
     }
   }
 </script>


<script>
  // recent values for checking form validation
  const productName = document.getElementById("product_name").value;
  const description = document.getElementById("descriptionid").value;
  const regularPrice= document.getElementById("regularPrice").value;
  const salesPrice = document.getElementById("salesPrice").value;
  console.log(`product : ${productName} , description : ${description} , regularprice : ${regularPrice} , salesprice : ${salesPrice}`);
  
  function validateForm(){
    const updatedName = document.getElementById("product_name").value;
    const updateDescription = document.getElementById("descriptionid").value
    const updatedRegularPrice = document.getElementById("regularPrice").value
    const updatedSalesPrice = document.getElementById("salesPrice").value    
    if(productName==updatedName && description==updateDescription && salesPrice==updatedSalesPrice && regularPrice==updatedRegularPrice){
      console.log("afte checking condition");
      Swal.fire({
      toast : true,
      icon : "error",
      position : "top-end",
      title : "make any changes to update",
      showConfirmButton: false,
      timer: 2500,
      timerProgressBar: true,
    })

    return false;
    }
    return true;
  }
</script>


<!-- script file and jquery -->
<script src="/backend/assets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="/backend/assets/js/vendors/bootstrap.bundle.min.js"></script>
<script src="/backend/assets/js/vendors/select2.min.js"></script>
<script src="/backend/assets/js/vendors/select2.min.js"></script>
<script src="/backend/assets/js/vendors/perfect-scrollbar.js"></script>
<script src="/backend/assets/js/vendors/jquery.fullscreen.min.js"></script>
<script src="/backend/assets/js/vendors/chart.js"></script>
<!-- Main Script -->
<script src="/backend/assets/js/main.js" type="text/javascript"></script>
<script src="/backend/assets/js/custom-chart.js" type="text/javascript"></script>