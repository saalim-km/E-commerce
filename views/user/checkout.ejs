<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link rel="stylesheet" href="/assets/css/style.css">
    <!-- Toastify -->
    <link rel="stylesheet" href="css/fonts.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <style>
        /* Checkout page styles */
        .checkout-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        .checkout-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
        }
        .checkout-section {
            background: #fff;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .checkout-container h4 {
            font-weight: 600;
            margin-bottom: 20px;
            color: #333;
        }
        .form-check {
            margin-bottom: 15px;
        }
        .order-items {
            margin-bottom: 20px;
        }
        .order-item {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }
        .order-item:last-child {
            border-bottom: none;
        }
        .order-item img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            margin-right: 15px;
            border-radius: 4px;
        }
        .order-item p {
            margin: 0;
            font-size: 14px;
            line-height: 1.4;
        }
        .apply-coupon {
            display: flex;
            align-items: center;
            margin-top: 20px;
        }
        .apply-coupon input {
            flex-grow: 1;
            margin-right: 10px;
        }
        .payment-methods {
            margin-top: 20px;
        }
        .btn {
            margin-top: 20px;
            width: 100%;
        }
        .order-total {
            font-size: 18px;
            font-weight: bold;
            margin-top: 20px;
            padding-top: 20px;
            border-top: 2px solid #eee;
        }
        @media (max-width: 768px) {
            .checkout-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body class="page-template belle">
<form id="checkoutForm" action="/user/checkout" method="POST" >
<div class="pageWrapper">

    <%- include('../auth/partials/header'); %>

    <!-- Checkout Section -->
    <div class="checkout-grid container mb-5 mt-5">
        <div class="checkout-section">
            <!-- Address Section -->
            <h4>Select Shipping Address</h4>
        <% if (address.length > 0) { %>
            <% address.forEach(function(add, index) { %> 
                <div class="form-check">
                    <input class="form-check-input" 
                           type="radio" 
                           name="selectedAddress" 
                           id="address_<%= add._id %>" 
                           value="<%= add._id %>" 
                           <% if (index === 0) { %> checked <% } %> 
                           required>
                    <label class="form-check-label col-lg-5" for="address_<%= add._id %>">
                        <%= add.fullName%> , <%= add.house %> , <%= add.state %> , <%= add.pincode %>
                    </label>
                </div>
            <% }); %>
        <% } else { %>
            <h2>No Saved Address </h2>
            <a href="/user/address" class="btn btn-small">Add an address</a>
        <% } %>
        </div>

        <div class="checkout-section">
            <!-- Order Summary Section -->
            <h4>Order Summary</h4>
            <div class="order-items">
                <% cart.forEach(function(item) { %>
                    <div class="order-item">
                        <img src="<%= item.productId.images[0] %>" alt="<%= item.productId.productName %>">
                        <div>
                            <p><strong><%= item.productId.productName %></strong></p>
                            <p>Size: <%= item.sizes[0].size %></p>
                            <p>Quantity: <%= item.sizes[0].quantity %></p>
                            <p>Price: ₹<%= item.productId.salesPriceAfterDiscount && item.productId.productOffer[0].offerStatus ? item.productId.salesPriceAfterDiscount : item.productId.salesPrice%></p>
                            <p>SubTotal: ₹<%= item.productId.salesPriceAfterDiscount && item.productId.productOffer[0].offerStatus ? item.productId.salesPriceAfterDiscount * item.sizes[0].quantity : item.productId.salesPrice * item.sizes[0].quantity%></p>
                        </div>
                    </div>
                <% }); %>
            </div>

            <p><strong>Subtotal:</strong> ₹<span id="subtotal"><%= cart.reduce((total, item) => {
                const itemPrice = item.productId.salesPriceAfterDiscount && item.productId.productOffer[0].offerStatus ? item.productId.salesPriceAfterDiscount : item.productId.salesPrice;
                return total + (itemPrice * item.sizes[0].quantity);
            }, 0) %></span></p>

            <p id="discountAmount" style="display: none;"><strong>Discount:</strong> ₹<span id="discountValue">0</span></p>
            <p class="order-total"><strong>Total:</strong> ₹<span id="totalAfterDiscount"><%= cart.reduce((total, item) => {
                const itemPrice = item.productId.salesPriceAfterDiscount && item.productId.productOffer[0].offerStatus ? item.productId.salesPriceAfterDiscount : item.productId.salesPrice;
                return total + (itemPrice * item.sizes[0].quantity);
            }, 0) %></span></p>

            <!-- Hidden Input for Cart Items -->
            <% cart.forEach(function(item, index) { %>
                <input type="hidden" name="cartItems[<%= index %>][productId]" value="<%= item.productId._id %>">
                <input type="hidden" name="cartItems[<%= index %>][quantity]" value="<%= item.sizes[0].quantity %>">
                <input type="hidden" name="cartItems[<%= index %>][size]" value="<%= item.sizes[0].size %>">
                <input type="hidden" name="cartItems[<%= index %>][price]" value="<%= item.productId.salesPriceAfterDiscount && item.productId.productOffer[0].offerStatus ? item.productId.salesPriceAfterDiscount : item.productId.salesPrice%>">
            <% }); %>

            <!-- Coupon Input -->
            <div class="apply-coupon">
                <input type="text" class="form-control" name="couponCode" id="couponCode" placeholder="Enter coupon code"/>
                <button type="button" id="applyCouponBtn" class="btn btn-secondary mb-3">Apply</button>
                <button type="button" id="removeCoupon" class="ml-2 rounded btn-secondary" style="cursor: pointer; background-color: gray; color: black; border: none;">remove coupon</button>
            </div>

            <div class="available-coupons mt-4 card rounded">
                <div class="coupon-list p-3 checkout-section rounded">
                    <h5>Available Coupons</h5>  
                    <% coupons.forEach(function(coupon) { %>
                        <div class="coupon-item d-flex justify-content-between align-items-center mb-2 ">
                            <h3 style="font-weight: 700;" class="coupon-code"><%= coupon.name %></h3>
                            <p>This coupon is only valid for orders above ₹<%= coupon.minPrice %></p>
                            <button type="button" class="btn btn-sm btn-outline-secondary copy-coupon" data-coupon="<%= coupon.name %>">Copy</button>
                        </div>
                    <% }); %>
                </div>
            </div>


            <!-- Payment Methods Section -->
            <div class="payment-methods">
                <h5>Payment Methods</h5>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="COD">
                    <label class="form-check-label" for="cod">Cash on Delivery</label><strong id="codErr" style="color: red; margin-left: 2%;"></strong>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="Razorpay" value="Razorpay">
                    <label class="form-check-label" for="Razorpay">Razorpay</label>
                </div>
                <div class="form-check mb-2">
                        <input class="form-check-input" type="radio" name="paymentMethod" id="wallet" value="Wallet">
                        <label class="form-check-label" for="wallet">Wallet (₹<%= wallet %>)</label><strong id="walletErr" style="color: red;margin-left: 2%;"></strong>
                </div>
            </div>
            <!-- Submit Button -->
            <button id="placeOrderBtn" type="submit" class="btn btn-primary">Place Order</button>
        </div>
    </div>
</div>
</form>

<!-- sweet alert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- toastify -->
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<!-- j query -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- razorpay -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", () => {  
        const walletBalance = '<%= wallet %>'
        const wallet = document.getElementById('wallet');
        const walletErr = document.getElementById('walletErr');
        const totalElement = document.getElementById("totalAfterDiscount");        
        const cashOnDel = document.getElementById('cod');
        const codErr = document.getElementById('codErr');
        const checkoutForm = document.getElementById("checkoutForm");
        const applyCouponBtn = document.getElementById("applyCouponBtn");
        const subtotalElement = document.getElementById("subtotal");
        const discountElement = document.getElementById("discountAmount");
        const discountValueElement = document.getElementById("discountValue");

        if(parseInt(walletBalance) < parseInt(totalElement.innerText)) {
            wallet.disabled = true;
            walletErr.innerText = 'Insuffienct balance in wallet'
        }


        if(totalElement.innerText > 1000) {
            cashOnDel.disabled = true;
            codErr.innerText = 'COD is not available for orders above 1000';
        }

        const couponCodeInput = document.getElementById("couponCode");
        couponCodeInput.addEventListener('keyup',(e)=> {
            e.preventDefault()
            couponCodeInput.value = couponCodeInput.value.toUpperCase();
        });

        // Total Amount
        let originalTotal = parseFloat(totalElement.textContent);

        // validating coupon
        applyCouponBtn.addEventListener("click", () => {
            const couponCode = couponCodeInput.value.trim();
            if (!couponCode) {
                showToast("Please enter a coupon code.", "error");
                return;
            }

            fetch('/user/validate-coupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ 
                    couponCode: couponCode,
                    totalAmount: originalTotal
                }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.valid) {
                    const discountAmount = Math.round((originalTotal * data.discountPercentage) / 100);
                    const newTotal = originalTotal - discountAmount;

                    totalElement.textContent = newTotal.toFixed(2);
                    discountValueElement.textContent = discountAmount.toFixed(2);
                    discountElement.style.display = 'block';

                    showToast("Coupon applied successfully!", "success");
                } else {
                    couponCodeInput.value = '';
                    showToast(data.message || "Invalid coupon code.", "error");
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast("An error occurred. Please try again.", "error");
            });
        });


        // remove coupoon functionality
        document.getElementById('removeCoupon').addEventListener('click',()=> {
            if(!couponCodeInput.value){
                return showToast("no coupon to remove", "error");
            }
            totalElement.textContent = originalTotal.toFixed(2);

            discountValueElement.textContent = '';
            discountElement.style.display = 'none';

            couponCodeInput.value = '';

            showToast("Coupon removed successfully!", "error");
        })

        // helper function for firing toast.
        function showToast(message, type) {
            Toastify({
                text: message,
                duration: 3000,
                gravity: "top",
                position: "center",
                backgroundColor: type === "success" ? "#4CAF50" : "#f44336",
                close: true,
            }).showToast();
        }

        checkoutForm.addEventListener("submit", (event) => {
            const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
            const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');

            if (!selectedAddress) {
                event.preventDefault();
                showToast("Please select a shipping address.", "error");
                return;
            }

            if (!selectedPaymentMethod) {
                event.preventDefault();
                showToast("Please select a payment method.", "error");
                return;
            }

            if (selectedPaymentMethod.value === "Razorpay") {
                event.preventDefault();  

                var formData = $(checkoutForm).serialize(); 
                console.log(formData);
                
                
                $.ajax({
                    url: "/user/online_order",
                    type: "POST",
                    data: JSON.stringify({
                        formData
                    }),
                    success: function(res) {
                        if (res.success) {
                            var options = {
                                "key": ""+res.key_id+"",
                                "amount": ""+res.amount+"",
                                "currency": "INR",
                                "handler": function (response) {
                                   $.ajax({
                                        url : "/user/verify_order",
                                        type : 'POST',
                                        data : JSON.stringify({
                                            selectedAddress: $('#checkoutForm input[name="selectedAddress"]:checked').val(),
                                            formData,
                                        }),
                                        success : function (res) {
                                            if(res.success){
                                                window.location.href = `/user/order/${res.orderId}`;
                                            }else {
                                                showToast("Something went wrong. Please try again later.", "error");
                                            }
                                        }
                                   })
                                }
                            };
                            var razorpayObject = new Razorpay(options);

                            let paymentFailedSent = false;
                            razorpayObject.on('payment.failed', function (response) {
                                if(!paymentFailedSent){
                                    console.log('im payment fail handler');
                                    paymentFailedSent = true;   
                                    $.ajax({    
                                        url : "/user/payment_failed",
                                        type : 'POST',
                                        data : JSON.stringify({
                                            selectedAddress: $('#checkoutForm input[name="selectedAddress"]:checked').val(),
                                            formData,
                                        }),
                                        success: function() {
                                            showToast("Payment failed. Please try again.", "error");
                                        }
                                   });
                                }   
                            });
                            razorpayObject.open();
                        } else {
                            showToast(res.msg || "Error processing order", "error");
                        }
                    }
                });


            }
        });

        const copyButtons = document.querySelectorAll('.copy-coupon');
        
        copyButtons.forEach(button => {
            button.addEventListener('click', function() {
                const couponCode = this.getAttribute('data-coupon');
                navigator.clipboard.writeText(couponCode).then(() => {
                    // Change button text temporarily
                    const originalText = this.textContent;
                    this.textContent = 'Copied!';
                    setTimeout(() => {
                        this.textContent = originalText;
                    }, 2000);

                    // Show toast notification
                    showToast("Coupon code copied to clipboard!", "success");
                }, (err) => {
                    console.error('Could not copy text: ', err);
                    showToast("Failed to copy coupon code.", "error");
                });
            });
        });
    });
</script>



<%- include('../auth/partials/footer.ejs') %>