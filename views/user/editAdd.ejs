<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Addresses</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
    <!-- Custom Styles -->
    <link rel="stylesheet" href="/css/fonts.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <!-- jQuery (included once) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        body {
            background-color: #f8f9fa;
        }

        .address-container {
            padding: 30px;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .address-list {
            max-height: 430px;
            overflow-y: auto;
            background-color: rgb(208, 208, 208);
            padding: 20px;
            border-radius: 10px;
        }

        .address-card {
            margin-bottom: 15px;
        }

        .address-form {
            padding: 30px;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .error-message {
            color: red;
            font-size: 0.875em;
        }

        .viga {
            font-family: 'Viga', sans-serif; /* Ensure you have the Viga font imported */
        }

        .badge.bg-danger {
            font-size: 0.75em;
        }

        /* Responsive adjustments */
        @media (max-width: 576px) {
            .address-container {
                padding: 20px;
            }

            .address-form {
                padding: 20px;
            }
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-sm navbar-expand-lg border-bottom ">
        <div class="container-fluid bg-white" style="z-index: 1;">
            <a class="navbar-brand d-flex align-items-center ms-5 " href="#">
                <h1 class="m-2 text-dark koulen">SAVAGE</h1>
            </a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/home">Home</a>
                    </li>
                    <li class="nav-item dropdown">
                        <button class="btn dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-person-fill"> </i>Account
                        </button>
                        <ul class="dropdown-menu dropdown-menu">
                            <li class="dropdown-item ">
                                <a class="nav-link " href="/user/profile">
                                    <i class="bi bi-person-fill"> </i> User Profile
                                </a>
                            </li>
                            <li class="dropdown-item ">
                                <a class="nav-link " href="/user/password">
                                    <i class="bi bi-key-fill"> </i> Change Password
                                </a>
                            </li>
                            <li class="dropdown-item active bg-dark">
                                <a class="nav-link text-white" href="/user/address">
                                    <i class="bi bi-person-vcard-fill"> </i> Address
                                </a>
                            </li>
                            <li class="dropdown-item">
                                <a class="nav-link" href="/user/orders">
                                    <i class="bi bi-box-seam-fill"> </i> Orders
                                </a>
                            </li>
                            <!-- <li class="dropdown-item ">
                                <a class="nav-link" href="/user/wallet/">
                                    <i class="bi bi-wallet2"> </i> SAVAGE-Wallet
                                </a>
                            </li> -->
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-danger fw-bold" href="/user/logout">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container my-5 d-md-flex">
        <!-- Address Form -->
        <div class="col-md-6 col-sm-12 address-form">
            <form id="addressForm" action="/user/edit_Address/<%=address._id%>" method="post" onsubmit="return validateAddressForm()">
                <h3 class="viga mb-4 text-center">Edit Address</h3>
                <!-- Full Name -->
                <div class="mb-3">
                    <label for="addressName" class="form-label">Full Name <small class="badge bg-danger" id="FN"></small></label>
                    <input type="text" id="addressName" name="name" class="form-control" value="<%= address.fullName %>">
                    <p class="error-message" id="userNameErr"></p>
                </div>
                <!-- House and Street Name -->
                <div class="row mb-3">
                    <div class="col">
                        <label for="houseName" class="form-label">House Name <small class="badge bg-danger" id="HN"></small></label>
                        <input type="text" id="houseName" name="house" class="form-control" value="<%= address.house %>">
                        <p class="error-message" id="error1"></p>
                    </div>
                    <div class="col">
                        <label for="streetName" class="form-label">Street Name <small class="badge bg-danger" id="SN"></small></label>
                        <input type="text" id="streetName" name="street" class="form-control" value="<%= address.street %>">
                        <p class="error-message" id="error2"></p>
                    </div>
                </div>
                <!-- City and State -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="city" class="form-label">City <small class="badge bg-danger" id="C"></small></label>
                        <input type="text" id="city" name="city" class="form-control" value="<%= address.city %>">
                        <p class="error-message" id="error3"></p>
                    </div>
                    <div class="col-md-6">
                        <label for="state" class="form-label">State <small class="badge bg-danger" id="S"></small></label>
                        <select id="state" name="state" class="form-select">
                            <option value="<%= address.state %>" selected><%= address.state %></option>
                            <option value="Andhra Pradesh">Andhra Pradesh</option>
                            <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                            <option value="Assam">Assam</option>
                            <option value="Bihar">Bihar</option>
                            <option value="Chhattisgarh">Chhattisgarh</option>
                            <option value="Goa">Goa</option>
                            <option value="Gujarat">Gujarat</option>
                            <option value="Haryana">Haryana</option>
                            <option value="Himachal Pradesh">Himachal Pradesh</option>
                            <option value="Jharkhand">Jharkhand</option>
                            <option value="Karnataka">Karnataka</option>
                            <option value="Kerala">Kerala</option>
                            <option value="Madhya Pradesh">Madhya Pradesh</option>
                            <option value="Maharashtra">Maharashtra</option>
                            <option value="Manipur">Manipur</option>
                            <option value="Meghalaya">Meghalaya</option>
                            <option value="Mizoram">Mizoram</option>
                            <option value="Nagaland">Nagaland</option>
                            <option value="Odisha">Odisha</option>
                            <option value="Punjab">Punjab</option>
                            <option value="Rajasthan">Rajasthan</option>
                            <option value="Sikkim">Sikkim</option>
                            <option value="Tamil Nadu">Tamil Nadu</option>
                            <option value="Telangana">Telangana</option>
                            <option value="Tripura">Tripura</option>
                            <option value="Uttar Pradesh">Uttar Pradesh</option>
                            <option value="Uttarakhand">Uttarakhand</option>
                            <option value="West Bengal">West Bengal</option>
                            <option value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</option>
                            <option value="Chandigarh">Chandigarh</option>
                            <option value="Dadra and Nagar Haveli">Dadra and Nagar Haveli</option>
                            <option value="Daman and Diu">Daman and Diu</option>
                            <option value="Lakshadweep">Lakshadweep</option>
                            <option value="Delhi">Delhi</option>
                            <option value="Puducherry">Puducherry</option>
                        </select>
                        <p class="error-message" id="error4"></p>
                    </div>
                </div>
                <!-- Pin-Code -->
                <div class="mb-3">
                    <label for="pinCode" class="form-label">Pin-Code <small class="badge bg-danger" id="PC"></small></label>
                    <input type="number" id="pinCode" name="pincode" class="form-control" value="<%= address.pincode %>">
                    <p class="error-message" id="error5"></p>
                </div>
                <!-- Phone Numbers -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="phoneNumber" class="form-label">Phone Number <small class="badge bg-danger" id="PN"></small></label>
                        <input type="number" id="phoneNumber" name="phone" class="form-control" value="<%= address.phone %>">
                        <p class="error-message" id="error6"></p>
                    </div>
                    <div class="col-md-6">
                        <label for="altPhoneNumber" class="form-label">Alt Phone Number  <small>( "optional" )</small></label>
                        <% if (address.altPhone) { %>
                            <input type="number" id="altPhoneNumber" name="altphone" class="form-control" value="<%= address.altPhone %>"> 
                            <p class="error-message" id="error7"></p> 
                        <% } else { %>
                            <input type="number" id="altPhoneNumber" name="altphone" class="form-control" placeholder="enter alt phone number"> 
                            <p class="error-message" id="error7"></p> 
                        <% } %>
                    </div>
                </div>
                <!-- Form Buttons -->
                <div class="text-start mb-3">
                    <button id="formSubmit" class="btn btn-dark px-5" type="submit">Submit</button>
                </div>
            </form>
            <a href="/user/address">
                <button class="btn btn-secondary px-2" type="reset" >Cancel</button>
            </a>
        </div>
    </div>

    
    <!-- Bootstrap Bundle JS (includes Popper) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous">
    </script>
    <!-- SweetAlert2 for Enhanced Alerts -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Toastify JS -->
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>



    <script>
        // Getting all elements for validation
        const form = document.getElementById("addressForm");
        const addressName = document.getElementById("addressName");
        const houseName = document.getElementById("houseName");
        const streetName = document.getElementById("streetName");
        const city = document.getElementById("city");
        const state = document.getElementById("state");
        const pinCode = document.getElementById("pinCode");
        const phoneNumber = document.getElementById("phoneNumber");

        // Error message elements
        const userNameErr = document.getElementById("userNameErr");
        const error1 = document.getElementById("error1");
        const error2 = document.getElementById("error2");
        const error3 = document.getElementById("error3");
        const error4 = document.getElementById("error4");
        const error5 = document.getElementById("error5");
        const error6 = document.getElementById("error6");

        // Validation Functions

    function validateUsername() {
            const username = addressName.value.trim();
            const userPattern = /^[a-zA-Z\s]{4,14}$/;
            const isValid = userPattern.test(username);

            userNameErr.textContent = "";
            if (username === "") {
                userNameErr.textContent = "Full Name cannot be empty.";
                addressName.style.border = "2px solid red";
                return false;
            }

            if (!isValid) {
                userNameErr.textContent = "Enter 4-14 alphabetic characters.";
                addressName.style.border = "2px solid red";
                return false;
            }
            
            addressName.style.border = "2px solid green";
            return true;
        }

    function validateHouseName() {
        const house = houseName.value.trim();
        const housePattern = /^[a-zA-Z\s]+$/; 
        error1.textContent = "";

        if (house === "") {
            error1.textContent = "House Name cannot be empty.";
            houseName.style.border = "2px solid red";
            return false;
        }

        if (!housePattern.test(house)) {
            error1.textContent = "Only alphabets and spaces allowed.";
            houseName.style.border = "2px solid red";
            return false;
        }

        houseName.style.border = "2px solid green";
        return true;
    }

    function validateStreetName() {
        const street = streetName.value.trim();
        const streetPattern = /^[a-zA-Z\s]+$/; 
        error2.textContent = "";

        if (street === "") {
            error2.textContent = "Street Name cannot be empty.";
            streetName.style.border = "2px solid red";
            return false;
        }

        if (!streetPattern.test(street)) {
            error2.textContent = "Only alphabets and spaces allowed.";
            streetName.style.border = "2px solid red";
            return false;
        }

        streetName.style.border = "2px solid green"
        return true;
    }

    function validateCity() {
            const cityValue = city.value.trim();
            const cityPattern = /^[a-zA-Z\s]{2,}$/;

            error3.textContent = "";

            if (cityValue === "") {
                error3.textContent = "City cannot be empty.";
                city.style.border = "2px solid red";
                return false;
            }

            if (!cityPattern.test(cityValue)) {
                error3.textContent = "Enter a valid city name.";
                city.style.border = "2px solid red";
                return false;
            }

            city.style.border = "2px solid green";
            return true;
        }

    function validateState() {
            const stateValue = state.value;
            error4.textContent = "";

            if (stateValue === "") {
                error4.textContent = "Please select a state.";
                state.style.border = "2px solid red";
                return false;
            }

            state.style.border = "2px solid green";
            return true;
        }

    function validatePinCode() {
        const pin = pinCode.value.trim();
        const pinPattern = /^\d{6}$/;
        const repeatPattern = /(\d)\1{2}/; 

        error5.textContent = "";

        if (pin === "") {
            error5.textContent = "Pin-Code cannot be empty.";
            pinCode.style.border = "2px solid red";
            return false;
        }

        if (!pinPattern.test(pin)) {
            error5.textContent = "Enter a valid 6-digit Pin-Code.";
            pinCode.style.border = "2px solid red";
            return false;
        }

        if (repeatPattern.test(pin)) {
            error5.textContent = "Pin-Code cannot have 3 repeating digits.";
            pinCode.style.border = "2px solid red";
            return false;
        }

        pinCode.style.border = "2px solid green";
        return true;
    }

    function validatePhoneNumber() {
        const phone = phoneNumber.value.trim();
        const phonePattern = /^\d{10}$/;
        const repeatPattern = /(\d)\1{3}/; // Checks for 4 consecutive repeating digits

        error6.textContent = "";

        if (phone === "") {
            error6.textContent = "Phone Number cannot be empty.";
            phoneNumber.style.border = "2px solid red";
            return false;
        }

        if (!phonePattern.test(phone)) {
            error6.textContent = "Enter a valid 10-digit Phone Number.";
            phoneNumber.style.border = "2px solid red";
            return false;
        }

        if (repeatPattern.test(phone)) {
            error6.textContent = "Phone Number cannot have 4 repeating digits.";
            phoneNumber.style.border = "2px solid red";
            return false;
        }

        phoneNumber.style.border = "2px solid green";
        return true;
    }

    function resetForm() {

            // Remove validation borders
            addressName.style.border = "";
            houseName.style.border = "";
            streetName.style.border = "";
            city.style.border = "";
            state.style.border = "";
            pinCode.style.border = "";
            phoneNumber.style.border = "";

            // Clear error messages
            userNameErr.textContent = "";
            error1.textContent = "";
            error2.textContent = "";
            error3.textContent = "";
            error4.textContent = "";
            error5.textContent = "";
            error6.textContent = "";
        }

        // Validation and Submission Handler
    function validateAddressForm() {
            const isUsernameValid = validateUsername();
            const isHouseValid = validateHouseName();
            const isStreetValid = validateStreetName();
            const isCityValid = validateCity();
            const isStateValid = validateState();
            const isPinValid = validatePinCode();
            const isPhoneValid = validatePhoneNumber();

            const result = isUsernameValid && isHouseValid && isStreetValid && isCityValid && isStateValid && isPinValid && isPhoneValid;
            return result;
        }

        // Added event listeners for live form validation
        addressName.addEventListener("input", validateUsername);
        houseName.addEventListener("input", validateHouseName);
        streetName.addEventListener("input", validateStreetName);
        city.addEventListener("input", validateCity);
        state.addEventListener("change", validateState);
        pinCode.addEventListener("input", validatePinCode);
        phoneNumber.addEventListener("input", validatePhoneNumber);
    </script>
</body>

</html>
